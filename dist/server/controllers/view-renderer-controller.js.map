{"version":3,"sources":["../../../src/server/controllers/view-renderer-controller.js"],"names":["AuthorizationHelper","ErrorHandler","Records","Constants","router","Router","get","req","res","next","iss","launch","query","authorize","url","redirect","invalidAuthParams","console","log","message","code","state","accessToken","patient","authentication","authenticated","send","handleRenderer","html","renderToString","createElement","renderFullPage"],"mappings":"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","file":"view-renderer-controller.js","sourcesContent":["\"use strict\";\nimport express from 'express';\nimport React from 'react';\nimport ReactDomServer from 'react-dom/server';\nimport Component from '../index';\nimport * as AuthorizationHelper from '../helper/authorization-helper';\nimport co from '../util/wrap';\nimport * as ErrorHandler from '../error-handler';\nimport { get } from '../service/http-service'\nimport * as Records from '../models/models';\nimport * as Constants from '../util/constants';\n\nconst router = express.Router();\n\nrouter.get('/', co(function* (req, res, next) {\n    try {\n        let iss = null, launch = null;\n        ({ iss, launch } = req.query);\n        if (iss && launch) {\n            const url = yield AuthorizationHelper.authorize(iss, launch);\n            res.redirect(url);\n        } else\n            invalidAuthParams(res);\n    } catch (err) {\n        console.log('err = ' + err);\n        ErrorHandler.ErrorHandler(\"InternalServerError\", res, err.message);\n    }\n}));\n\nrouter.get('/callback', co(function* (req, res, next) {\n    try {\n        let code = null, state = null, accessToken = null, patient = 0;\n        ({ code, state } = req.query);\n        if (!(code && state)) invalidAuthParams(res);\n        const authentication = yield AuthorizationHelper.accessToken(code, state);\n        if (!authentication) invalidAuthParams(res);\n        else if (!authentication.authenticated) {\n            const url = yield AuthorizationHelper.authorize(authentication.iss, authentication.launch);\n            if (!url) invalidAuthParams(res);\n            res.redirect(url);\n        } else res.send(handleRenderer(authentication.state));\n    } catch (err) {\n        console.log('err = ' + err);\n        ErrorHandler.ErrorHandler(\"InternalServerError\", res, err.message);\n    }\n}));\n\n\nconst invalidAuthParams = res =>\n    ErrorHandler.ErrorHandler(\"AuthenticationError\", res, \"Invalid authentication parameters sent\");\n\nconst handleRenderer = (state) => {\n    const html = ReactDomServer.renderToString(\n        React.createElement(Component)\n    );\n    return renderFullPage(renderFullPage(html, state))\n};\n\nconst renderFullPage = (html, state) => {\n    return `\n    <!doctype html>\n    <html style=\"width:100%;height:100%\">\n      <head>\n        <title>Diabetes Dashboard</title>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <script type=\"text/javascript\">  \n            function evaluate(x) {\n                return eval(x);\n            }\n            window.__PRELOADED_STATE__ = '${state}'\n        </script>\n        <script src=\"/terra/js/terra.min.js\"></script>\n        <link rel=\"stylesheet\" href=\"/terra/css/terra.min.css\">\n      </head>\n      <body style=\"width:inherit;height:inherit\">\n        <div id=\"root-app\" style=\"width:inherit;height:inherit\">${html}</div>\n      </body>\n    </html>\n    `\n};\n\nexport default router;"]}