{"version":3,"sources":["../../../src/server/helper/glucose-resource-helper.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAEA;;IAAY,O;;AACZ;;AACA;;IAAY,S;;;;AAEL,IAAM,oDAAsB,SAAtB,mBAAsB,CAAC,IAAD,EAAQ;AACvC,WAAO,oBAAoB,IAApB,IAA0B,yBAAyB,IAAzB,CAA1B,GAA0D,IAAjE;AACH,CAFM;;AAIP,IAAM,sBAAsB,SAAtB,mBAAsB,CAAC,IAAD;AAAA,WAAW,QAAQ,KAAK,MAAb,IAAuB,KAAK,MAAL,KAAgB,GAAxC,GAA8C,IAA9C,GAAmD,KAA7D;AAAA,CAA5B;;AAEA,IAAM,2BAA2B,SAA3B,wBAA2B,CAAC,IAAD,EAAS;AACtC,QAAI,UAAU,KAAK,IAAL,CAAU,KAAV,CAAgB,GAAhB,CAAoB,UAAC,KAAD,EAAW;AACzC,YAAI,MAAM,QAAN,CAAe,IAAf,CAAoB,MAAxB,EAAgC;AAAA,uDACb,MAAM,QAAN,CAAe,IAAf,CAAoB,MADP;;AAAA,gBACrB,IADqB;;AAE5B,gBAAI,KAAK,IAAL,IAAa,UAAU,YAA3B,EAAyC;AACrC,uBAAO,IAAI,QAAQ,WAAZ,CAAwB;AAC3B,0BAAM,MAAM,QAAN,CAAe,MADM;AAE3B,8BAAU,MAAM,QAAN,CAAe,aAAf,CAA6B,KAFZ;AAG3B,oCAAgB,MAAM,QAAN,CAAe,cAAf,CAA8B,MAA9B,CAAqC,CAArC,EAAwC;AAH7B,iBAAxB,CAAP;AAKH;AACJ;AACJ,KAXa,EAWX,MAXW,CAWJ;AAAA,eAAU,KAAD,GAAU,IAAV,GAAiB,KAA1B;AAAA,KAXI,CAAd;AAYA,WAAO,qBAAK,OAAL,CAAP;AACH,CAdD","file":"glucose-resource-helper.js","sourcesContent":["\"use strict\";\n\nimport * as Records from '../models/models';\nimport {List} from 'immutable';\nimport * as Constants from '../util/constants';\n\nexport const fetchGlucoseResults = (json)=>{\n    return checkResponseStatus(json)?buildObservationFromJson(json): null;\n};\n\nconst checkResponseStatus = (json) => (json && json.status && json.status === 200)? true:false;\n\nconst buildObservationFromJson = (json) =>{\n    let glucose = json.data.entry.map((entry) => {\n        if (entry.resource.code.coding) {\n            const [code] = entry.resource.code.coding;\n            if (code.code == Constants.GLUCOSE_CODE) {\n                return new Records.Observation({\n                    date: entry.resource.issued,\n                    quantity: entry.resource.valueQuantity.value,\n                    interpretation: entry.resource.interpretation.coding[0].code\n                });\n            }\n        }\n    }).filter(entry => (entry) ? true : false);\n    return List(glucose);\n};\n"]}