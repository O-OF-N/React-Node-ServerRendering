{"version":3,"sources":["../../../src/server/helper/medication-helper.js"],"names":["Records","Constants","HttpUtil","fetchMedications","state","fetchMedicationsHelper","result","checkResponseStatus","buildMedicationOrdersResult","findByState","userAuthenticationModel","url","buildMedicationURL","patient","iss","authHeader","buildAuthorizationHeader","json","medicationOrder","data","entry","map","resource","MedicationOrder","status","prescriber","display","date","dateWritten","dosage","dosageInstruction","text","medication","fetchMedicationFromResource","filter","medicationReference","medicationCodeableConcept"],"mappings":"AAAA;;;;;;;;;AAEA;;IAAYA,O;;AACZ;;AACA;;IAAYC,S;;AACZ;;AACA;;IAAYC,Q;;AACZ;;;;;;;;AAEA;AACO,IAAMC,sEAAmB,SAAnBA,gBAAmB,CAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDACNC,uBAAuBD,KAAvB,CADM;;AAAA;AACtBE,0BADsB;AAAA,qDAErBJ,SAASK,mBAAT,CAA6BD,MAA7B,IAAuCE,4BAA4BF,MAA5B,CAAvC,GAA6E,IAFxD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAnBH,gBAAmB;AAAA,CAAnB,CAAN;;AAKP;AACA,IAAME,iDAAyB,SAAzBA,sBAAyB,CAAWD,KAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACa,mCAAwBK,WAAxB,CAAoCL,KAApC,CADb;;AAAA;AAAA;AAAA;AACpBM,2CADoB;AAErBC,uBAFqB,GAEfT,SAASU,kBAAT,CAA4BF,wBAAwBG,OAApD,EAA6DH,wBAAwBI,GAArF,CAFe;AAGrBC,8BAHqB,GAGRb,SAASc,wBAAT,CAAkCN,uBAAlC,CAHQ;AAAA;AAAA,2BAIN,sBAAIC,GAAJ,EAASI,UAAT,CAJM;;AAAA;AAIrBT,0BAJqB;AAAA,sDAKpBA,MALoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAzBD,sBAAyB;AAAA,CAAzB,CAAN;;AASA,IAAMG,8BAA8B,SAA9BA,2BAA8B,CAACS,IAAD,EAAU;AAC1C,QAAIC,kBAAmBD,KAAKE,IAAL,IAAaF,KAAKE,IAAL,CAAUC,KAAxB,GAAiCH,KAAKE,IAAL,CAAUC,KAAV,CAAgBC,GAAhB,CAAoB,UAACD,KAAD,EAAW;AAClF,YAAIA,SAASA,MAAME,QAAnB,EAA6B;AACzB,gBAAMA,WAAWF,MAAME,QAAvB;AACA,mBAAO,IAAItB,QAAQuB,eAAZ,CAA4B;AAC/BC,wBAASF,SAASE,MADa;AAE/BC,4BAAaH,SAASG,UAAV,GAAwBH,SAASG,UAAT,CAAoBC,OAA5C,GAAsD,IAFnC;AAG/BC,sBAAML,SAASM,WAHgB;AAI/BC,wBAASP,SAASQ,iBAAV,GAA+BR,SAASQ,iBAAT,CAA2B,CAA3B,EAA8BC,IAA7D,GAAoE,IAJ7C;AAK/BC,4BAAYC,4BAA4BX,QAA5B;AALmB,aAA5B,CAAP;AAOH;AACJ,KAXsD,EAWpDY,MAXoD,CAW7C;AAAA,eAAUd,KAAD,GAAU,IAAV,GAAiB,KAA1B;AAAA,KAX6C,CAAjC,GAWuB,IAX7C;AAYA,WAAO,qBAAKF,eAAL,CAAP;AACH,CAdD;;AAgBA,IAAMe,8BAA8B,SAA9BA,2BAA8B,CAACX,QAAD;AAAA,WAAcA,WAAWA,SAASa,mBAAT,GAA+Bb,SAASa,mBAAT,CAA6BT,OAA5D,GAAsEJ,SAASc,yBAAT,GAAqCd,SAASc,yBAAT,CAAmCL,IAAxE,GAA+E,IAAhK,GAAuK,IAArL;AAAA,CAApC","file":"medication-helper.js","sourcesContent":["\"use strict\";\n\nimport * as Records from '../models/models';\nimport {List} from 'immutable';\nimport * as Constants from '../util/constants';\nimport {get} from '../service/http-service'\nimport * as HttpUtil from '../util/http-utils';\nimport UserAuthenticationModel from '../models/UserAuthenticationSchema';\n\n//public functions\nexport const fetchMedications = function* (state) {\n    const result = yield* fetchMedicationsHelper(state);\n    return HttpUtil.checkResponseStatus(result) ? buildMedicationOrdersResult(result) : null;\n};\n\n//Private functions\nconst fetchMedicationsHelper = function* (state) {\n    const [userAuthenticationModel] = yield UserAuthenticationModel.findByState(state);\n    const url = HttpUtil.buildMedicationURL(userAuthenticationModel.patient, userAuthenticationModel.iss);\n    const authHeader = HttpUtil.buildAuthorizationHeader(userAuthenticationModel);\n    const result = yield get(url, authHeader);\n    return result;\n};\n\n\nconst buildMedicationOrdersResult = (json) => {\n    let medicationOrder = (json.data && json.data.entry) ? json.data.entry.map((entry) => {\n        if (entry && entry.resource) {\n            const resource = entry.resource;\n            return new Records.MedicationOrder({\n                status: (resource.status),\n                prescriber: (resource.prescriber) ? resource.prescriber.display : null,\n                date: resource.dateWritten,\n                dosage: (resource.dosageInstruction) ? resource.dosageInstruction[0].text : null,\n                medication: fetchMedicationFromResource(resource)\n            });\n        }\n    }).filter(entry => (entry) ? true : false) : null;\n    return List(medicationOrder);\n};\n\nconst fetchMedicationFromResource = (resource) => resource ? resource.medicationReference ? resource.medicationReference.display : resource.medicationCodeableConcept ? resource.medicationCodeableConcept.text : null : null;"]}