{"version":3,"sources":["../../../src/server/helper/observation-helper.js"],"names":["Records","Constants","HttpUtil","fetchGlucoseResults","state","fetchObservationResultsHelper","result","checkResponseStatus","buildGlucoseResultsFromJson","fetchLabResults","buildLabResultsFromJson","lonicCodes","findByState","userAuthenticationModel","url","buildObeservationURL","patient","iss","authHeader","buildAuthorizationHeader","json","status","glucose","data","entry","map","resource","Glucose","code","coding","date","issued","quantity","valueQuantity","value","interpretation","filter","lab","console","log"],"mappings":"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","file":"observation-helper.js","sourcesContent":["\"use strict\";\n\nimport * as Records from '../models/models';\nimport {List} from 'immutable';\nimport * as Constants from '../util/constants';\nimport {get} from '../service/http-service'\nimport * as HttpUtil from '../util/http-utils';\nimport UserAuthenticationModel from '../models/UserAuthenticationSchema';\n\n//Public functions\nexport const fetchGlucoseResults = function* (state) {\n    const result = yield* fetchObservationResultsHelper(state, [\"glucose\"]);\n    return checkResponseStatus(result) ? buildGlucoseResultsFromJson(result) : null;\n};\n\nexport const fetchLabResults = function* (state) {\n    const result = yield* fetchObservationResultsHelper(state, [\"ketones\",\"ph\",\"serum\"]);\n    return checkResponseStatus(result) ? buildLabResultsFromJson(result) : null;\n};\n\n\n//Private functions\n\n\nconst fetchObservationResultsHelper = function* (state, lonicCodes) {\n    const [userAuthenticationModel] = yield UserAuthenticationModel.findByState(state);\n    const url = HttpUtil.buildObeservationURL(userAuthenticationModel.patient, lonicCodes, userAuthenticationModel.iss);\n    const authHeader = HttpUtil.buildAuthorizationHeader(userAuthenticationModel);\n    const result = yield get(url, authHeader);\n    return result;\n};\n\nconst checkResponseStatus = (json) => (json && json.status && json.status === 200) ? true : false;\n\nconst buildGlucoseResultsFromJson = (json) => {\n    let glucose = (json.data && json.data.entry)?json.data.entry.map((entry) => {\n        if (entry && entry.resource) {\n            const resource = entry.resource;\n            return new Records.Glucose({\n                resource: (resource.code) ? resource.code.coding : null,\n                date: resource.issued,\n                quantity: resource.valueQuantity.value,\n                interpretation: (resource.interpretation && resource.interpretation.coding) ? resource.interpretation.coding[0].code : null\n            });\n        }\n    }).filter(entry => (entry) ? true : false):null;\n    return List(glucose);\n};\n\nconst buildLabResultsFromJson = (json) => {\n    let lab = json.data.entry.map((entry) => {\n        if (entry && entry.resource) {\n            const resource = entry.resource;\n            console.log(resource);\n        }\n    }).filter(entry => (entry) ? true : false);\n    return List(glucose);\n}\n"]}