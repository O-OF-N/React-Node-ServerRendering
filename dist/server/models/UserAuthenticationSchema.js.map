{"version":3,"sources":["../../../src/server/models/UserAuthenticationSchema.js"],"names":["Schema","UserAuthenticationSchema","state","String","iss","authorizationCode","accessToken","authorizationURL","tokenURL","patient","Number","launch","created_at","type","Date","default","updated_at","UserAuthenticationModel","model","save","userAuthentication","saveHelper","bind","findByState","findByStateHelper","update","_id","$set","updateHelper","find","userAuth","userAuthenticationToSave","toJS","findByIdAndUpdate"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,mBAASA,MAAtB;;AAEA,IAAMC,2BAA2B,IAAID,MAAJ,CAAW;AACxCE,WAAOC,MADiC;AAExCC,SAAKD,MAFmC;AAGxCE,uBAAmBF,MAHqB;AAIxCG,iBAAaH,MAJ2B;AAKxCI,sBAAkBJ,MALsB;AAMxCK,cAAUL,MAN8B;AAOxCM,aAASC,MAP+B;AAQxCC,YAAQR,MARgC;AASxCS,gBAAY,EAAEC,MAAMC,IAAR,EAAcC,SAAS,IAAID,IAAJ,EAAvB,EAT4B;AAUxCE,gBAAY,EAAEH,MAAMC,IAAR,EAAcC,SAAS,IAAID,IAAJ,EAAvB;AAV4B,CAAX,CAAjC;;AAaA,IAAMG,0BAA0B,mBAASC,KAAT,CAAe,UAAf,EAA2BjB,wBAA3B,CAAhC;;AAEAgB,wBAAwBE,IAAxB,GAA+B,UAACC,kBAAD;AAAA,WAC3B,kBAAGC,WAAWC,IAAX,YAAsBF,kBAAtB,CAAH,CAD2B;AAAA,CAA/B;;AAGAH,wBAAwBM,WAAxB,GAAsC,UAACrB,KAAD;AAAA,WAAW,kBAAGsB,kBAAkBF,IAAlB,YAA6BpB,KAA7B,CAAH,CAAX;AAAA,CAAtC;;AAEAe,wBAAwBQ,MAAxB,GAAiC,UAACC,GAAD,EAAMC,IAAN;AAAA,WAAe,kBAAGC,aAAaN,IAAb,YAAwBI,GAAxB,EAA6BC,IAA7B,CAAH,CAAf;AAAA,CAAjC;;AAEA,IAAMH,4CAAoB,SAApBA,iBAAoB,CAAWtB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBA,4BAAQ,6BAASA,KAAT,CAAR;AADsB;AAAA,2BAECe,wBAAwBY,IAAxB,CAA6B,EAAE3B,YAAF,EAA7B,CAFD;;AAAA;AAEhB4B,4BAFgB;AAAA,qDAGfA,QAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApBN,iBAAoB;AAAA,CAApB,CAAN;;AAMA,IAAMH,qCAAa,SAAbA,UAAa,CAAWD,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACTW,4CADS,GACkB,IAAId,uBAAJ,CAA4BG,mBAAmBY,IAAnB,EAA5B,CADlB;AAAA;AAAA,2BAEQD,yBAAyBZ,IAAzB,EAFR;;AAAA;AAETW,4BAFS;AAAA,sDAGRA,QAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAbT,UAAa;AAAA,CAAb,CAAN;;AAMA,IAAMO,uCAAe,SAAfA,YAAe,CAAWF,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBD,0BAAM,6BAASA,GAAT,CAAN;AADiB;AAAA,2BAEMT,wBAAwBgB,iBAAxB,CAA0C,EAAEP,QAAF,EAA1C,EAAmD,EAAEC,UAAF,EAAnD,CAFN;;AAAA;AAEXG,4BAFW;AAAA,sDAGVA,QAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAfF,YAAe;AAAA,CAAf,CAAN;;kBAMeX,uB","file":"UserAuthenticationSchema.js","sourcesContent":["import { UserAuthentication } from './models';\nimport mongoose from 'mongoose';\nimport co from 'co';\nimport sanitize from 'mongo-sanitize';\n\nvar Schema = mongoose.Schema;\n\nconst UserAuthenticationSchema = new Schema({\n    state: String,\n    iss: String,\n    authorizationCode: String,\n    accessToken: String,\n    authorizationURL: String,\n    tokenURL: String,\n    patient: Number,\n    launch: String,\n    created_at: { type: Date, default: new Date() },\n    updated_at: { type: Date, default: new Date() }\n});\n\nconst UserAuthenticationModel = mongoose.model('UserAuth', UserAuthenticationSchema);\n\nUserAuthenticationModel.save = (userAuthentication) =>\n    co(saveHelper.bind(this, userAuthentication));\n\nUserAuthenticationModel.findByState = (state) => co(findByStateHelper.bind(this, state));\n\nUserAuthenticationModel.update = (_id, $set) => co(updateHelper.bind(this, _id, $set));\n\nconst findByStateHelper = function* (state) {\n    state = sanitize(state);\n    const userAuth = yield UserAuthenticationModel.find({ state });\n    return userAuth;\n}\n\nconst saveHelper = function* (userAuthentication) {\n    const userAuthenticationToSave = new UserAuthenticationModel(userAuthentication.toJS());\n    const userAuth = yield userAuthenticationToSave.save();\n    return userAuth;\n};\n\nconst updateHelper = function* (_id, $set) {\n    _id = sanitize(_id);\n    const userAuth = yield UserAuthenticationModel.findByIdAndUpdate({ _id }, { $set });\n    return userAuth;\n}\n\nexport default UserAuthenticationModel;\n\n\n"]}