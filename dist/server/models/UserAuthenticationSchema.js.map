{"version":3,"sources":["../../../src/server/models/UserAuthenticationSchema.js"],"names":["Schema","UserAuthenticationSchema","state","String","iss","authorizationCode","accessToken","authorizationURL","tokenURL","patient","Number","UserAuthenticationModel","model","save","userAuthentication","saveHelper","bind","find","findByState","userAuth","userAuthenticationToSave","toJS"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,mBAASA,MAAtB;;AAEA,IAAMC,2BAA2B,IAAID,MAAJ,CAAW;AACxCE,WAAOC,MADiC;AAExCC,SAAKD,MAFmC;AAGxCE,uBAAmBF,MAHqB;AAIxCG,iBAAaH,MAJ2B;AAKxCI,sBAAkBJ,MALsB;AAMxCK,cAAUL,MAN8B;AAOxCM,aAASC;AAP+B,CAAX,CAAjC;;AAUA,IAAMC,0BAA0B,mBAASC,KAAT,CAAe,UAAf,EAA2BX,wBAA3B,CAAhC;;AAEAU,wBAAwBE,IAAxB,GAA+B,UAACC,kBAAD;AAAA,WAAwB,kBAAGC,WAAWC,IAAX,YAAsBF,kBAAtB,CAAH,CAAxB;AAAA,CAA/B;;AAEAH,wBAAwBM,IAAxB,GAA+B,UAACf,KAAD;AAAA,WAAW,kBAAGgB,YAAYF,IAAZ,YAAuBd,KAAvB,CAAH,CAAX;AAAA,CAA/B;;AAEA,IAAMgB,sCAAc,SAAdA,WAAc,CAAWhB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACOS,wBAAwBM,IAAxB,CAA6B,EAAEf,YAAF,EAA7B,CADP;;AAAA;AACViB,4BADU;AAAA,qDAETA,QAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAdD,WAAc;AAAA,CAAd,CAAN;;AAKA,IAAMH,qCAAa,SAAbA,UAAa,CAAWD,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACTM,4CADS,GACkB,IAAIT,uBAAJ,CAA4BG,mBAAmBO,IAAnB,EAA5B,CADlB;AAAA;AAAA,2BAEQD,yBAAyBP,IAAzB,EAFR;;AAAA;AAETM,4BAFS;AAAA,sDAGRA,QAHQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAbJ,UAAa;AAAA,CAAb,CAAN;;kBAMeJ,uB","file":"UserAuthenticationSchema.js","sourcesContent":["import {UserAuthentication} from './models';\nimport mongoose from 'mongoose';\nimport co from 'co';\n\nvar Schema = mongoose.Schema;\n\nconst UserAuthenticationSchema = new Schema({\n    state: String,\n    iss: String,\n    authorizationCode: String,\n    accessToken: String,\n    authorizationURL: String,\n    tokenURL: String,\n    patient: Number\n});\n\nconst UserAuthenticationModel = mongoose.model('UserAuth', UserAuthenticationSchema);\n\nUserAuthenticationModel.save = (userAuthentication) => co(saveHelper.bind(this, userAuthentication));\n\nUserAuthenticationModel.find = (state) => co(findByState.bind(this, state));\n\nconst findByState = function* (state) {\n    const userAuth = yield UserAuthenticationModel.find({ state });\n    return userAuth;\n}\n\nconst saveHelper = function* (userAuthentication) {\n    const userAuthenticationToSave = new UserAuthenticationModel(userAuthentication.toJS());\n    const userAuth = yield userAuthenticationToSave.save();\n    return userAuth;\n};\n\nexport default UserAuthenticationModel;\n\n\n"]}