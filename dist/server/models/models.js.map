{"version":3,"sources":["../../../src/server/models/models.js"],"names":["Constants","Observation","resource","text","date","quantity","unit","interpretation","source","LabResult","code","observation","InsulinOrder","status","dosage","medication","comments","administration","MedicationOrder","type","medications","AccessTokenRequestBody","grant_type","get","redirect_uri","client_id","AuthorizationHeader","headers","AUTHORIZATION_HEADER","POSTHeader","UserAuthentication","state","iss","authorizationCode","accessToken","authorizationURL","tokenURL","patient","DatabaseConfig","userName","password","url","schema","FHIRAuthorizationConfig","clientId","redirectUrl","responseType","scope"],"mappings":";;;;;;;AAAA;;AACA;;IAAYA,S;;AACZ;;;;AAEO,IAAMC,oCAAc,sBAAW;AAClCC,cAAU,EADwB;AAElCC,UAAM,EAF4B;AAGlCC,UAAM,EAH4B;AAIlCC,cAAU,CAJwB;AAKlCC,UAAK,EAL6B;AAMlCC,oBAAgB,EANkB;AAOlCC,YAAQ;AAP0B,CAAX,CAApB;;AAUA,IAAMC,gCAAY,sBAAW;AAChCC,UAAK,EAD2B;AAEhCC,iBAAY;AAFoB,CAAX,CAAlB;;AAKA,IAAMC,sCAAe,sBAAW;AACnCC,YAAQ,EAD2B;AAEnCT,UAAM,EAF6B;AAGnCU,YAAQ,CAH2B;AAInCC,gBAAY,EAJuB;AAKnCC,cAAU,EALyB;AAMnCC,oBAAgB,EANmB;AAOnCP,UAAM;AAP6B,CAAX,CAArB;;AAUA,IAAMQ,4CAAkB,sBAAW;AACtCC,UAAM,EADgC;AAEtCC,iBAAa;AAFyB,CAAX,CAAxB;;AAKA,IAAMC,0DAAyB,sBAAW;AAC7CC,gBAAY,sBAAWC,GAAX,uBAA0BD,UADO;AAE7CZ,UAAM,EAFuC;AAG7Cc,kBAAc,sBAAWD,GAAX,uBAA0BC,YAHK;AAI7CC,eAAW,sBAAWF,GAAX,uBAA0BE;AAJQ,CAAX,CAA/B;;AAOA,IAAMC,oDAAsB,sBAAW;AAC1CC,aAAS3B,UAAU4B;AADuB,CAAX,CAA5B;;AAIA,IAAMC,kCAAa,sBAAW;AACjC,oBAAgB;AADiB,CAAX,CAAnB;;AAIA,IAAMC,kDAAqB,sBAAW;AACzCC,WAAO,EADkC;AAEzCC,SAAK,EAFoC;AAGzCC,uBAAmB,EAHsB;AAIzCC,iBAAa,EAJ4B;AAKzCC,sBAAkB,EALuB;AAMzCC,cAAU,EAN+B;AAOzCC,aAAS;AAPgC,CAAX,CAA3B;;AAUA,IAAMC,0CAAiB,sBAAW;AACrCC,cAAU,EAD2B;AAErCC,cAAU,EAF2B;AAGrCC,SAAK,EAHgC;AAIrCC,YAAQ;AAJ6B,CAAX,CAAvB;;AAOA,IAAMC,4DAA0B,sBAAW;AAC9CC,cAAU,EADoC;AAE9CC,iBAAa,EAFiC;AAG9CC,kBAAc,MAHgC;AAI9CC,WAAO;AAJuC,CAAX,CAAhC","file":"models.js","sourcesContent":["import {Record, List as immutableList} from 'immutable';\nimport * as Constants from '../util/constants';\nimport {ActiveEnv, FHIRConfig} from '../config/app-config';\n\nexport const Observation = new Record({\n    resource: '',\n    text: '',\n    date: '',\n    quantity: 0,\n    unit:'',\n    interpretation: '',\n    source: ''\n});\n\nexport const LabResult = new Record({\n    code:'',\n    observation:null\n});\n\nexport const InsulinOrder = new Record({\n    status: '',\n    date: '',\n    dosage: 0,\n    medication: '',\n    comments: '',\n    administration: '',\n    code: 0\n});\n\nexport const MedicationOrder = new Record({\n    type: '',\n    medications: immutableList()\n});\n\nexport const AccessTokenRequestBody = new Record({\n    grant_type: FHIRConfig.get(ActiveEnv).grant_type,\n    code: '',\n    redirect_uri: FHIRConfig.get(ActiveEnv).redirect_uri,\n    client_id: FHIRConfig.get(ActiveEnv).client_id\n});\n\nexport const AuthorizationHeader = new Record({\n    headers: Constants.AUTHORIZATION_HEADER\n});\n\nexport const POSTHeader = new Record({\n    \"Content-Type\": \"x-www-form-urlencoded\"\n});\n\nexport const UserAuthentication = new Record({\n    state: '',\n    iss: '',\n    authorizationCode: '',\n    accessToken: '',\n    authorizationURL: '',\n    tokenURL: '',\n    patient: 0\n});\n\nexport const DatabaseConfig = new Record({\n    userName: '',\n    password: '',\n    url: '',\n    schema: ''\n});\n\nexport const FHIRAuthorizationConfig = new Record({\n    clientId: '',\n    redirectUrl: '',\n    responseType: 'code',\n    scope: ''\n});"]}