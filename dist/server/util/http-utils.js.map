{"version":3,"sources":["../../../src/server/util/http-utils.js"],"names":["Constants","Records","Exceptions","buildAuthorizationHeader","userModel","Authorization","accessToken","AuthorizationHeader","headers","Accept","checkResponseStatus","json","status","HTTP_SUCCESS","buildObeservationURL","patient","lonicCodes","url","dates","codes","map","LONIC_URL","concat","l","join","urlConstructed","Array","length","dateRange","OBSERVATIONS","buildMedicationURL","MEDICATION_ORDER"],"mappings":";;;;;;;AAAA;;IAAYA,S;;AACZ;;IAAYC,O;;AACZ;;IAAYC,U;;;;AAEL,IAAMC,8DAA2B,SAA3BA,wBAA2B,CAACC,SAAD,EAAe;AACnD,QAAMC,4BAA0BD,UAAUE,WAA1C;AACA,WAAO,IAAIL,QAAQM,mBAAZ,CAAgC,EAAEC,SAAS,EAAEC,QAAQ,uBAAV,EAAmCJ,4BAAnC,EAAX,EAAhC,CAAP;AACH,CAHM;;AAKA,IAAMK,oDAAsB,SAAtBA,mBAAsB,CAACC,IAAD;AAAA,WAAWA,QAAQA,KAAKC,MAAb,IAAuBD,KAAKC,MAAL,KAAgBZ,UAAUa,YAAlD,GAAkE,IAAlE,GAAyE,KAAnF;AAAA,CAA5B;;AAEP;AACO,IAAMC,sDAAuB,SAAvBA,oBAAuB,CAACC,OAAD,EAAUC,UAAV,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAqC;AACrE,QAAMC,QAAQH,WAAWI,GAAX,CAAe;AAAA,eAAKpB,UAAUqB,SAAV,CAAoBC,MAApB,CAA2B,GAA3B,EAAgCA,MAAhC,CAAuCC,CAAvC,CAAL;AAAA,KAAf,EAA+DC,IAA/D,CAAoE,GAApE,CAAd;AACA,QAAIC,iBAAiB,EAArB;AACA,QAAIP,SAAS,IAAT,IAAiBA,iBAAiBQ,KAAlC,IAA2CR,MAAMS,MAAN,IAAgB,CAA/D,EAAkE;AAC9D,YAAMC,YAAY,GAAGN,MAAH,CAAU,SAAV,EAAqBA,MAArB,CAA4BJ,MAAM,CAAN,CAA5B,EAAsCI,MAAtC,CAA6C,UAA7C,EAAyDA,MAAzD,CAAgEJ,MAAM,CAAN,CAAhE,CAAlB;AACAO,yBAAoBR,GAApB,SAA2BjB,UAAU6B,YAArC,iBAA6D,OAA7D,cAA6EV,KAA7E,SAAsFS,SAAtF;AACH,KAHD,MAIIH,iBAAoBR,GAApB,SAA2BjB,UAAU6B,YAArC,iBAA6D,OAA7D,cAA6EV,KAA7E;AACJ,WAAOM,cAAP;AACH,CATM;;AAWA,IAAMK,kDAAqB,SAArBA,kBAAqB,CAACf,OAAD,EAAUE,GAAV;AAAA,WAAqBA,GAArB,SAA4BjB,UAAU+B,gBAAtC,iBAAkE,OAAlE;AAAA,CAA3B","file":"http-utils.js","sourcesContent":["import * as Constants from './constants';\nimport * as Records from '../models/models';\nimport * as Exceptions from './exceptions'\n\nexport const buildAuthorizationHeader = (userModel) => {\n    const Authorization = `Bearer ${userModel.accessToken}`;\n    return new Records.AuthorizationHeader({ headers: { Accept: \"application/json+fhir\", Authorization } });\n}\n\nexport const checkResponseStatus = (json) => (json && json.status && json.status === Constants.HTTP_SUCCESS) ? true : false;\n\n//test patient ids: 4640007,4638007\nexport const buildObeservationURL = (patient, lonicCodes, url, dates) => {\n    const codes = lonicCodes.map(l => Constants.LONIC_URL.concat('|').concat(l)).join(',');\n    let urlConstructed = '';\n    if (dates != null && dates instanceof Array && dates.length == 2) {\n        const dateRange = ''.concat('date=gt').concat(dates[0]).concat('&date=lt').concat(dates[1]);\n        urlConstructed = `${url}/${Constants.OBSERVATIONS}?patient=${4638007}&code=${codes}&${dateRange}`;\n    } else\n        urlConstructed = `${url}/${Constants.OBSERVATIONS}?patient=${4638007}&code=${codes}`;\n    return urlConstructed;\n};\n\nexport const buildMedicationURL = (patient, url) => `${url}/${Constants.MEDICATION_ORDER}?patient=${4638007}&status=active`;"]}