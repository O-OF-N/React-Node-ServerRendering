{"version":3,"sources":["../../../src/server/util/http-utils.js"],"names":["Constants","Records","buildAuthorizationHeader","userModel","Authorization","accessToken","AuthorizationHeader","headers","Accept","checkResponseStatus","json","status","HTTP_SUCCESS","buildObeservationURL","patient","lonicCodes","url","dates","codes","map","LONIC_URL","concat","l","join","urlConstructed","Array","length","dateRange","OBSERVATIONS","buildMedicationURL","MEDICATION_ORDER"],"mappings":";;;;;;;AAAA;;IAAYA,S;;AACZ;;IAAYC,O;;;;AAEL,IAAMC,8DAA2B,SAA3BA,wBAA2B,CAACC,SAAD,EAAe;AACnD,QAAMC,4BAA0BD,UAAUE,WAA1C;AACA,WAAO,IAAIJ,QAAQK,mBAAZ,CAAgC,EAAEC,SAAS,EAAEC,QAAQ,uBAAV,EAAmCJ,4BAAnC,EAAX,EAAhC,CAAP;AACH,CAHM;;AAKA,IAAMK,oDAAsB,SAAtBA,mBAAsB,CAACC,IAAD;AAAA,WAAWA,QAAQA,KAAKC,MAAb,IAAuBD,KAAKC,MAAL,KAAgBX,UAAUY,YAAlD,GAAkE,IAAlE,GAAyE,KAAnF;AAAA,CAA5B;;AAEA,IAAMC,sDAAuB,SAAvBA,oBAAuB,CAACC,OAAD,EAAUC,UAAV,EAAsBC,GAAtB,EAA0BC,KAA1B,EAAoC;AACpE,QAAMC,QAAQH,WAAWI,GAAX,CAAe;AAAA,eAAKnB,UAAUoB,SAAV,CAAoBC,MAApB,CAA2B,GAA3B,EAAgCA,MAAhC,CAAuCC,CAAvC,CAAL;AAAA,KAAf,EAA+DC,IAA/D,CAAoE,GAApE,CAAd;AACA,QAAIC,iBAAiB,EAArB;AACA,QAAGP,SAAQ,IAAR,IAAgBA,iBAAiBQ,KAAjC,IAA0CR,MAAMS,MAAN,IAAc,CAA3D,EAA6D;AACzD,YAAMC,YAAY,GAAGN,MAAH,CAAU,SAAV,EAAqBA,MAArB,CAA4BJ,MAAM,CAAN,CAA5B,EAAsCI,MAAtC,CAA6C,UAA7C,EAAyDA,MAAzD,CAAgEJ,MAAM,CAAN,CAAhE,CAAlB;AACAO,yBAAmBR,GAAnB,SAA0BhB,UAAU4B,YAApC,iBAA4D,OAA5D,cAA4EV,KAA5E,SAAqFS,SAArF;AACH,KAHD,MAIAH,iBAAmBR,GAAnB,SAA0BhB,UAAU4B,YAApC,iBAA4D,OAA5D,cAA4EV,KAA5E;AACA,WAAOM,cAAP;AACH,CATM;;AAWA,IAAMK,kDAAqB,SAArBA,kBAAqB,CAACf,OAAD,EAAUE,GAAV;AAAA,WAAqBA,GAArB,SAA4BhB,UAAU8B,gBAAtC,iBAAkE,OAAlE;AAAA,CAA3B","file":"http-utils.js","sourcesContent":["import * as Constants from './constants';\nimport * as Records from '../models/models';\n\nexport const buildAuthorizationHeader = (userModel) => {\n    const Authorization = `Bearer ${userModel.accessToken}`;\n    return new Records.AuthorizationHeader({ headers: { Accept: \"application/json+fhir\", Authorization } });\n}\n\nexport const checkResponseStatus = (json) => (json && json.status && json.status === Constants.HTTP_SUCCESS) ? true : false;\n\nexport const buildObeservationURL = (patient, lonicCodes, url,dates) => {\n    const codes = lonicCodes.map(l => Constants.LONIC_URL.concat('|').concat(l)).join(',');\n    let urlConstructed = '';\n    if(dates!= null && dates instanceof Array && dates.length==2){\n        const dateRange = ''.concat('date=gt').concat(dates[0]).concat('&date=lt').concat(dates[1]);\n        urlConstructed= `${url}/${Constants.OBSERVATIONS}?patient=${4638007}&code=${codes}&${dateRange}`;\n    } else \n    urlConstructed= `${url}/${Constants.OBSERVATIONS}?patient=${4638007}&code=${codes}`;\n    return urlConstructed;\n};\n\nexport const buildMedicationURL = (patient, url) => `${url}/${Constants.MEDICATION_ORDER}?patient=${4638007}`;"]}